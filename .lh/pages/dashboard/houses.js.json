{
    "sourceFile": "pages/dashboard/houses.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 19,
            "patches": [
                {
                    "date": 1722424974690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1722425040773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,9 @@\n import { HiPencilAlt } from \"react-icons/hi\";\n import { HiHome } from \"react-icons/hi\";\n import { HiMail } from \"react-icons/hi\";\n import { HiOutlineSearch } from \"react-icons/hi\";\n+import {  FaCheckCircle, FaTimesCircle, FaHourglassHalf,FaRegEdit,FaEye,FaRegTrashAlt } from 'react-icons/fa';\n \n const ITEMS_PER_PAGE = 10;\n \n const Houses = ({ initialHouses }) => {\n"
                },
                {
                    "date": 1722425086646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,12 +182,19 @@\n                             <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{house.resident_name}</Table.Cell>\n                             <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{house.occupancy_status}</Table.Cell>\n                             <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{formatCurrency(house.fee)}</Table.Cell>\n                             <Table.Cell className='py-2 px-4 md:py-3 md:px-'>\n-                                <Button size=\"sm\" onClick={() => handleEditClick(house)}>\n+                                {/* <Button size=\"sm\" onClick={() => handleEditClick(house)}>\n                                     <HiPencilAlt  className=\"md:mr-2 h-4 w-4\" />\n                                     <span className='hidden md:block'>Edit</span>\n-                                </Button>\n+                                </Button> */}\n+\n+                          <Dropdown  className=\"relative z-50 cursor-pointer\" align=\"right\" label=\"\" renderTrigger={() => <span><FaEllipsisH  className=\"h-4 w-4 cursor-pointer\" /></span>}>\n+                            <Dropdown.Item onClick={() => handleEditClick(transaction._id)}><FaRegEdit className='mr-1'/><span>Edit</span></Dropdown.Item>\n+                            <Dropdown.Item><FaEye className='mr-1'/><span>View</span></Dropdown.Item>\n+                            <Dropdown.Item  ><FaRegTrashAlt className='mr-1' /><span>Delete</span></Dropdown.Item>\n+                          </Dropdown>\n+\n                             </Table.Cell>\n                         </Table.Row>\n                     ))}\n                 </Table.Body>\n"
                },
                {
                    "date": 1722425114276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,10 @@\n import { HiHome } from \"react-icons/hi\";\n import { HiMail } from \"react-icons/hi\";\n import { HiOutlineSearch } from \"react-icons/hi\";\n import {  FaCheckCircle, FaTimesCircle, FaHourglassHalf,FaRegEdit,FaEye,FaRegTrashAlt } from 'react-icons/fa';\n+import { FaEllipsisH } from \"react-icons/fa\";\n+import { FaExchangeAlt } from \"react-icons/fa\";\n \n const ITEMS_PER_PAGE = 10;\n \n const Houses = ({ initialHouses }) => {\n"
                },
                {
                    "date": 1722425139131,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -190,9 +190,9 @@\n                                     <span className='hidden md:block'>Edit</span>\n                                 </Button> */}\n \n                           <Dropdown  className=\"relative z-50 cursor-pointer\" align=\"right\" label=\"\" renderTrigger={() => <span><FaEllipsisH  className=\"h-4 w-4 cursor-pointer\" /></span>}>\n-                            <Dropdown.Item onClick={() => handleEditClick(transaction._id)}><FaRegEdit className='mr-1'/><span>Edit</span></Dropdown.Item>\n+                            <Dropdown.Item onClick={() => handleEditClick(house)}><FaRegEdit className='mr-1'/><span>Edit</span></Dropdown.Item>\n                             <Dropdown.Item><FaEye className='mr-1'/><span>View</span></Dropdown.Item>\n                             <Dropdown.Item  ><FaRegTrashAlt className='mr-1' /><span>Delete</span></Dropdown.Item>\n                           </Dropdown>\n \n"
                },
                {
                    "date": 1722425244865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,9 +165,9 @@\n           <div className='overflow-x-auto '>\n             <Table hoverable>\n                 <Table.Head>\n                     <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>No</Table.HeadCell>\n-                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>No Rumah</Table.HeadCell>\n+                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Rumah</Table.HeadCell>\n                     <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Nama</Table.HeadCell>\n                     <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Status</Table.HeadCell>\n                     <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Tarif IPL</Table.HeadCell>\n                     <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>\n"
                },
                {
                    "date": 1722425254978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,8 +166,9 @@\n             <Table hoverable>\n                 <Table.Head>\n                     <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>No</Table.HeadCell>\n                     <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Rumah</Table.HeadCell>\n+                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>No. WA</Table.HeadCell>\n                     <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Nama</Table.HeadCell>\n                     <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Status</Table.HeadCell>\n                     <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Tarif IPL</Table.HeadCell>\n                     <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>\n"
                },
                {
                    "date": 1722425292649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,317 @@\n+// pages/home.js\n+import { getSession, useSession } from 'next-auth/react';\n+import { useRouter } from 'next/router';\n+import { useEffect,useState } from 'react';\n+import axios from 'axios';\n+import { useRequireAuth } from '../../utils/authUtils'; \n+import ReactPaginate from 'react-paginate';\n+\n+import { Table } from \"flowbite-react\";\n+import { Button } from \"flowbite-react\";\n+import { Label, TextInput,Drawer,Select,Dropdown } from \"flowbite-react\";\n+import Header from '../../components/Header';\n+import SideMenu from '../../components/dashboard/Sidebar'\n+import Spinner from '../../components/Spinner';\n+import { HiPencilAlt } from \"react-icons/hi\";\n+import { HiHome } from \"react-icons/hi\";\n+import { HiMail } from \"react-icons/hi\";\n+import { HiOutlineSearch } from \"react-icons/hi\";\n+import {  FaCheckCircle, FaTimesCircle, FaHourglassHalf,FaRegEdit,FaEye,FaRegTrashAlt } from 'react-icons/fa';\n+import { FaEllipsisH } from \"react-icons/fa\";\n+import { FaExchangeAlt } from \"react-icons/fa\";\n+\n+const ITEMS_PER_PAGE = 10;\n+\n+const Houses = ({ initialHouses }) => {\n+  const { useAuthRedirect } = useRequireAuth(['admin', 'editor', 'superadmin']);\n+  useAuthRedirect();\n+\n+  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n+  const toggleSidebar = () => {\n+    setIsSidebarOpen(!isSidebarOpen);\n+  };\n+  const { data: session, status } = useSession();\n+  // /console.log(session)\n+  //const token = session.accessToken;\n+  const [houses, setHouses] = useState([initialHouses]);\n+  const [searchTerm, setSearchTerm] = useState('');\n+  const [currentPage, setCurrentPage] = useState(0);\n+  const [filter, setFilter] = useState({ name: '', house_id: '' });\n+  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n+  const [editData, setEditData] = useState(null);\n+  const [loading, setLoading] = useState(true);\n+\n+  useEffect(() => {\n+    if (session) {\n+        const fetchHouses = async () => {\n+            try {\n+                const res = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}/houses/all`, {\n+                    headers: {\n+                      Authorization: `Bearer ${session.accessToken}`,\n+                    },\n+                });\n+                setHouses(res.data);\n+                setLoading(false);\n+            } catch (error) {\n+                console.error('Error fetching houses data:', error);\n+                setLoading(false);\n+            }\n+        };\n+\n+        fetchHouses();\n+    }\n+  }, [session, status]);\n+\n+  const formatCurrency = (amount) => {\n+    return new Intl.NumberFormat('id-ID', {\n+        style: 'currency',\n+        currency: 'IDR',\n+        minimumFractionDigits: 0,\n+    }).format(amount);\n+  };\n+\n+  const handlePageClick = (data) => {\n+    setCurrentPage(data.selected);\n+  };\n+\n+  const handleFilterChange = (e) => {\n+    const { name, value } = e.target;\n+    setFilter({ ...filter, [name]: value });\n+  };  \n+  \n+  const handleSearchChange = (event) => {\n+    setSearchTerm(event.target.value);\n+  };\n+\n+  const filteredHouses = houses.filter(house => \n+    (house.resident_name && house.resident_name.toLowerCase().includes(searchTerm.toLowerCase())) ||\n+    (house.house_id && house.house_id.toLowerCase().includes(searchTerm.toLowerCase()))\n+  );\n+\n+  const offset = currentPage * ITEMS_PER_PAGE;\n+  const currentPageData = filteredHouses.slice(offset, offset + ITEMS_PER_PAGE);\n+\n+  const handleEditClick = (house) => {\n+    setEditData(house);\n+    setIsDrawerOpen(true);\n+  };\n+\n+  const handleSaveChanges = async () => {\n+    try {\n+        const res = await axios.put(`${process.env.NEXT_PUBLIC_API_URL}/houses/update/${editData._id}`, editData, {\n+            headers: {\n+                Authorization: `Bearer ${session.accessToken}`,\n+            },\n+        });\n+        setHouses(houses.map(house => house._id === editData._id ? res.data : house));\n+        setIsDrawerOpen(false);\n+    } catch (error) {\n+        console.error('Error updating house data:', error);\n+    }\n+  };\n+\n+  const handleInputChange = (e) => {\n+    const { name, value } = e.target;\n+    setEditData({ ...editData, [name]: value });\n+  };\n+\n+  // Calculate house status counts\n+  const statusCounts = houses.reduce((acc, house) => {\n+    const status = house.occupancy_status || 'Unknown';\n+    if (!acc[status]) {\n+        acc[status] = 0;\n+    }\n+    acc[status]++;\n+    return acc;\n+  }, {});\n+\n+\n+  if (loading) {\n+    return <Spinner />;\n+  }\n+\n+  return (\n+    <>\n+    \n+    <Header toggleSidebar={toggleSidebar}/>\n+    <main className='max-w-screen-xl mx-auto'>\n+      <div className='w-full'>\n+        <SideMenu isOpen={isSidebarOpen}/>\n+        <section className='mt-14 px-5 py-5 md:px-8 sm:ml-64'>\n+          <h1 className='text-xl mb-4 flex font-semibold text-gray-900 sm:text-2xl dark:text-white'>\n+            <HiHome  className=\"mr-2 h-8 w-8\" /> \n+            <span>Data Rumah</span>\n+          </h1>\n+          \n+          <div className=\"mb-4\">\n+              <ul className='flex gap-4'>\n+                  {Object.entries(statusCounts).map(([status, count]) => (\n+                      <li key={count}>{`${status}: ${count} Rumah`}</li>\n+                  ))}\n+              </ul>\n+          </div>\n+\n+          <div className=\"max-w-sm mb-4\">\n+            <TextInput \n+              name=\"name\"\n+              placeholder=\"Cari\"\n+              value={searchTerm}\n+              onChange={handleSearchChange}\n+              className=\"mr-2\"\n+              icon={HiOutlineSearch} \n+               />\n+          </div>\n+          \n+          <div className='overflow-x-auto '>\n+            <Table hoverable>\n+                <Table.Head>\n+                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>No</Table.HeadCell>\n+                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Rumah</Table.HeadCell>\n+                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>No. WA</Table.HeadCell>\n+                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Nama</Table.HeadCell>\n+                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Status</Table.HeadCell>\n+                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Tarif IPL</Table.HeadCell>\n+                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>\n+                        <span className=\"sr-only\">Edit</span>\n+                    </Table.HeadCell>\n+                </Table.Head>\n+                <Table.Body className=\"divide-y\">\n+                    {currentPageData.map((house, index) => (\n+                        <Table.Row key={index} className=\"bg-white dark:border-gray-700 dark:bg-gray-800\">\n+                            <Table.Cell  className=\"py-2 px-4 md:py-3 md:px- whitespace-nowrap font-medium text-gray-900 dark:text-white\">\n+                                {offset + index + 1}\n+                            </Table.Cell>\n+                            <Table.Cell className='py-2 px-4 md:py-3 md:px-'>{house.house_id}</Table.Cell>\n+                            <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{house.resident_name}</Table.Cell>\n+                            <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{house.whatsapp_number}</Table.Cell>\n+                            <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{house.occupancy_status}</Table.Cell>\n+                            <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{formatCurrency(house.fee)}</Table.Cell>\n+                            <Table.Cell className='py-2 px-4 md:py-3 md:px-'>\n+                                {/* <Button size=\"sm\" onClick={() => handleEditClick(house)}>\n+                                    <HiPencilAlt  className=\"md:mr-2 h-4 w-4\" />\n+                                    <span className='hidden md:block'>Edit</span>\n+                                </Button> */}\n+\n+                          <Dropdown  className=\"relative z-50 cursor-pointer\" align=\"right\" label=\"\" renderTrigger={() => <span><FaEllipsisH  className=\"h-4 w-4 cursor-pointer\" /></span>}>\n+                            <Dropdown.Item onClick={() => handleEditClick(house)}><FaRegEdit className='mr-1'/><span>Edit</span></Dropdown.Item>\n+                            <Dropdown.Item><FaEye className='mr-1'/><span>View</span></Dropdown.Item>\n+                            <Dropdown.Item  ><FaRegTrashAlt className='mr-1' /><span>Delete</span></Dropdown.Item>\n+                          </Dropdown>\n+\n+                            </Table.Cell>\n+                        </Table.Row>\n+                    ))}\n+                </Table.Body>\n+            </Table>\n+          </div>\n+\n+          <nav className='py-6'>\n+          <ReactPaginate\n+                previousLabel={'Previous'}\n+                nextLabel={'Next'}\n+                breakLabel={'...'}\n+                pageCount={Math.ceil(filteredHouses.length / ITEMS_PER_PAGE)}\n+                marginPagesDisplayed={2}\n+                pageRangeDisplayed={5}\n+                onPageChange={handlePageClick}\n+                containerClassName={'pagination flex justify-center -space-x-px text-sm'}\n+                pageClassName={'page-item'}\n+                pageLinkClassName={'flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'}\n+                previousClassName={'page-item'}\n+                previousLinkClassName={'flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'}\n+                nextClassName={'page-item'}\n+                nextLinkClassName={'flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'}\n+                breakClassName={'page-item'}\n+                breakLinkClassName={'flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'}\n+                activeClassName={'active'}\n+                activeLinkClassName={'bg-gray-300'}\n+            />\n+          </nav>\n+        </section>\n+\n+        {editData && (\n+          <Drawer className='pt-16' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)} position=\"right\">\n+          <Drawer.Header title=\"Edit Data Rumah\" titleIcon={HiHome}/>\n+            <Drawer.Items>\n+                <div>\n+                    <label className=\"block mb-2 text-sm font-medium text-gray-700\">Nama</label>\n+                    <TextInput\n+                        name=\"resident_name\"\n+                        value={editData?.resident_name || ''}\n+                        onChange={handleInputChange}\n+                        className=\"mb-4\"\n+                    />\n+                    <label className=\"block mb-2 text-sm font-medium text-gray-700\">Status</label>\n+                      <Select\n+                        id=\"occupancy_status\"\n+                        name=\"occupancy_status\"\n+                        value={editData?.occupancy_status || ''}\n+                        onChange={handleInputChange}\n+                        className=\"mb-4\"\n+                      >\n+                          <option value=\"Kosong\">Kosong</option>\n+                          <option value=\"Isi\">Isi</option>\n+                          <option value=\"Weekend\">Weekend</option>\n+                          <option value=\"Tidak ada kontak\">Tidak ada kontak</option>\n+                      </Select>\n+                    <label className=\"block mb-2 text-sm font-medium text-gray-700\">Tarif IPL</label>\n+                    <TextInput\n+                        name=\"fee\"\n+                        value={editData?.fee || ''}\n+                        onChange={handleInputChange}\n+                        className=\"mb-4\"\n+                    />\n+                </div>\n+                <div className='flex'>\n+                <Button className='mr-4' size='md' onClick={handleSaveChanges}>Simpan</Button>\n+                <Button color=\"gray\" size='md' onClick={() => setIsDrawerOpen(false)}>Batal</Button>\n+                </div>\n+            </Drawer.Items>\n+            \n+          </Drawer>\n+        )}\n+        \n+       \n+      </div>\n+      \n+      \n+    </main>\n+    </>\n+  );\n+}\n+\n+export const getServerSideProps = async (context) => {\n+  const session = await getSession(context);\n+  \n+  if (!session) {\n+      return {\n+          redirect: {\n+              destination: '/',\n+              permanent: false,\n+          },\n+      };\n+  }\n+\n+  try {\n+      const res = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}/houses/all`, {\n+          headers: {\n+              Authorization: `Bearer ${session.accessToken}`,\n+          },\n+      });\n+      return {\n+          props: {\n+              initialHouses: res.data,\n+          },\n+      };\n+  } catch (error) {\n+      console.error('Error fetching houses data:', error);\n+      return {\n+          props: {\n+              initialHouses: [],\n+          },\n+      };\n+  }\n+};\n+\n+\n+export default Houses;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722425321417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,325 +181,10 @@\n                             <Table.Cell  className=\"py-2 px-4 md:py-3 md:px- whitespace-nowrap font-medium text-gray-900 dark:text-white\">\n                                 {offset + index + 1}\n                             </Table.Cell>\n                             <Table.Cell className='py-2 px-4 md:py-3 md:px-'>{house.house_id}</Table.Cell>\n-                            <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{house.resident_name}</Table.Cell>\n+\n                             <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{house.whatsapp_number}</Table.Cell>\n-                            <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{house.occupancy_status}</Table.Cell>\n-                            <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{formatCurrency(house.fee)}</Table.Cell>\n-                            <Table.Cell className='py-2 px-4 md:py-3 md:px-'>\n-                                {/* <Button size=\"sm\" onClick={() => handleEditClick(house)}>\n-                                    <HiPencilAlt  className=\"md:mr-2 h-4 w-4\" />\n-                                    <span className='hidden md:block'>Edit</span>\n-                                </Button> */}\n-\n-                          <Dropdown  className=\"relative z-50 cursor-pointer\" align=\"right\" label=\"\" renderTrigger={() => <span><FaEllipsisH  className=\"h-4 w-4 cursor-pointer\" /></span>}>\n-                            <Dropdown.Item onClick={() => handleEditClick(house)}><FaRegEdit className='mr-1'/><span>Edit</span></Dropdown.Item>\n-                            <Dropdown.Item><FaEye className='mr-1'/><span>View</span></Dropdown.Item>\n-                            <Dropdown.Item  ><FaRegTrashAlt className='mr-1' /><span>Delete</span></Dropdown.Item>\n-                          </Dropdown>\n-\n-                            </Table.Cell>\n-                        </Table.Row>\n-                    ))}\n-                </Table.Body>\n-            </Table>\n-          </div>\n-\n-          <nav className='py-6'>\n-          <ReactPaginate\n-                previousLabel={'Previous'}\n-                nextLabel={'Next'}\n-                breakLabel={'...'}\n-                pageCount={Math.ceil(filteredHouses.length / ITEMS_PER_PAGE)}\n-                marginPagesDisplayed={2}\n-                pageRangeDisplayed={5}\n-                onPageChange={handlePageClick}\n-                containerClassName={'pagination flex justify-center -space-x-px text-sm'}\n-                pageClassName={'page-item'}\n-                pageLinkClassName={'flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'}\n-                previousClassName={'page-item'}\n-                previousLinkClassName={'flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'}\n-                nextClassName={'page-item'}\n-                nextLinkClassName={'flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'}\n-                breakClassName={'page-item'}\n-                breakLinkClassName={'flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'}\n-                activeClassName={'active'}\n-                activeLinkClassName={'bg-gray-300'}\n-            />\n-          </nav>\n-        </section>\n-\n-        {editData && (\n-          <Drawer className='pt-16' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)} position=\"right\">\n-          <Drawer.Header title=\"Edit Data Rumah\" titleIcon={HiHome}/>\n-            <Drawer.Items>\n-                <div>\n-                    <label className=\"block mb-2 text-sm font-medium text-gray-700\">Nama</label>\n-                    <TextInput\n-                        name=\"resident_name\"\n-                        value={editData?.resident_name || ''}\n-                        onChange={handleInputChange}\n-                        className=\"mb-4\"\n-                    />\n-                    <label className=\"block mb-2 text-sm font-medium text-gray-700\">Status</label>\n-                      <Select\n-                        id=\"occupancy_status\"\n-                        name=\"occupancy_status\"\n-                        value={editData?.occupancy_status || ''}\n-                        onChange={handleInputChange}\n-                        className=\"mb-4\"\n-                      >\n-                          <option value=\"Kosong\">Kosong</option>\n-                          <option value=\"Isi\">Isi</option>\n-                          <option value=\"Weekend\">Weekend</option>\n-                          <option value=\"Tidak ada kontak\">Tidak ada kontak</option>\n-                      </Select>\n-                    <label className=\"block mb-2 text-sm font-medium text-gray-700\">Tarif IPL</label>\n-                    <TextInput\n-                        name=\"fee\"\n-                        value={editData?.fee || ''}\n-                        onChange={handleInputChange}\n-                        className=\"mb-4\"\n-                    />\n-                </div>\n-                <div className='flex'>\n-                <Button className='mr-4' size='md' onClick={handleSaveChanges}>Simpan</Button>\n-                <Button color=\"gray\" size='md' onClick={() => setIsDrawerOpen(false)}>Batal</Button>\n-                </div>\n-            </Drawer.Items>\n-            \n-          </Drawer>\n-        )}\n-        \n-       \n-      </div>\n-      \n-      \n-    </main>\n-    </>\n-  );\n-}\n-\n-export const getServerSideProps = async (context) => {\n-  const session = await getSession(context);\n-  \n-  if (!session) {\n-      return {\n-          redirect: {\n-              destination: '/',\n-              permanent: false,\n-          },\n-      };\n-  }\n-\n-  try {\n-      const res = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}/houses/all`, {\n-          headers: {\n-              Authorization: `Bearer ${session.accessToken}`,\n-          },\n-      });\n-      return {\n-          props: {\n-              initialHouses: res.data,\n-          },\n-      };\n-  } catch (error) {\n-      console.error('Error fetching houses data:', error);\n-      return {\n-          props: {\n-              initialHouses: [],\n-          },\n-      };\n-  }\n-};\n-\n-\n-export default Houses;\n-// pages/home.js\n-import { getSession, useSession } from 'next-auth/react';\n-import { useRouter } from 'next/router';\n-import { useEffect,useState } from 'react';\n-import axios from 'axios';\n-import { useRequireAuth } from '../../utils/authUtils'; \n-import ReactPaginate from 'react-paginate';\n-\n-import { Table } from \"flowbite-react\";\n-import { Button } from \"flowbite-react\";\n-import { Label, TextInput,Drawer,Select,Dropdown } from \"flowbite-react\";\n-import Header from '../../components/Header';\n-import SideMenu from '../../components/dashboard/Sidebar'\n-import Spinner from '../../components/Spinner';\n-import { HiPencilAlt } from \"react-icons/hi\";\n-import { HiHome } from \"react-icons/hi\";\n-import { HiMail } from \"react-icons/hi\";\n-import { HiOutlineSearch } from \"react-icons/hi\";\n-import {  FaCheckCircle, FaTimesCircle, FaHourglassHalf,FaRegEdit,FaEye,FaRegTrashAlt } from 'react-icons/fa';\n-import { FaEllipsisH } from \"react-icons/fa\";\n-import { FaExchangeAlt } from \"react-icons/fa\";\n-\n-const ITEMS_PER_PAGE = 10;\n-\n-const Houses = ({ initialHouses }) => {\n-  const { useAuthRedirect } = useRequireAuth(['admin', 'editor', 'superadmin']);\n-  useAuthRedirect();\n-\n-  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n-  const toggleSidebar = () => {\n-    setIsSidebarOpen(!isSidebarOpen);\n-  };\n-  const { data: session, status } = useSession();\n-  // /console.log(session)\n-  //const token = session.accessToken;\n-  const [houses, setHouses] = useState([initialHouses]);\n-  const [searchTerm, setSearchTerm] = useState('');\n-  const [currentPage, setCurrentPage] = useState(0);\n-  const [filter, setFilter] = useState({ name: '', house_id: '' });\n-  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n-  const [editData, setEditData] = useState(null);\n-  const [loading, setLoading] = useState(true);\n-\n-  useEffect(() => {\n-    if (session) {\n-        const fetchHouses = async () => {\n-            try {\n-                const res = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}/houses/all`, {\n-                    headers: {\n-                      Authorization: `Bearer ${session.accessToken}`,\n-                    },\n-                });\n-                setHouses(res.data);\n-                setLoading(false);\n-            } catch (error) {\n-                console.error('Error fetching houses data:', error);\n-                setLoading(false);\n-            }\n-        };\n-\n-        fetchHouses();\n-    }\n-  }, [session, status]);\n-\n-  const formatCurrency = (amount) => {\n-    return new Intl.NumberFormat('id-ID', {\n-        style: 'currency',\n-        currency: 'IDR',\n-        minimumFractionDigits: 0,\n-    }).format(amount);\n-  };\n-\n-  const handlePageClick = (data) => {\n-    setCurrentPage(data.selected);\n-  };\n-\n-  const handleFilterChange = (e) => {\n-    const { name, value } = e.target;\n-    setFilter({ ...filter, [name]: value });\n-  };  \n-  \n-  const handleSearchChange = (event) => {\n-    setSearchTerm(event.target.value);\n-  };\n-\n-  const filteredHouses = houses.filter(house => \n-    (house.resident_name && house.resident_name.toLowerCase().includes(searchTerm.toLowerCase())) ||\n-    (house.house_id && house.house_id.toLowerCase().includes(searchTerm.toLowerCase()))\n-  );\n-\n-  const offset = currentPage * ITEMS_PER_PAGE;\n-  const currentPageData = filteredHouses.slice(offset, offset + ITEMS_PER_PAGE);\n-\n-  const handleEditClick = (house) => {\n-    setEditData(house);\n-    setIsDrawerOpen(true);\n-  };\n-\n-  const handleSaveChanges = async () => {\n-    try {\n-        const res = await axios.put(`${process.env.NEXT_PUBLIC_API_URL}/houses/update/${editData._id}`, editData, {\n-            headers: {\n-                Authorization: `Bearer ${session.accessToken}`,\n-            },\n-        });\n-        setHouses(houses.map(house => house._id === editData._id ? res.data : house));\n-        setIsDrawerOpen(false);\n-    } catch (error) {\n-        console.error('Error updating house data:', error);\n-    }\n-  };\n-\n-  const handleInputChange = (e) => {\n-    const { name, value } = e.target;\n-    setEditData({ ...editData, [name]: value });\n-  };\n-\n-  // Calculate house status counts\n-  const statusCounts = houses.reduce((acc, house) => {\n-    const status = house.occupancy_status || 'Unknown';\n-    if (!acc[status]) {\n-        acc[status] = 0;\n-    }\n-    acc[status]++;\n-    return acc;\n-  }, {});\n-\n-\n-  if (loading) {\n-    return <Spinner />;\n-  }\n-\n-  return (\n-    <>\n-    \n-    <Header toggleSidebar={toggleSidebar}/>\n-    <main className='max-w-screen-xl mx-auto'>\n-      <div className='w-full'>\n-        <SideMenu isOpen={isSidebarOpen}/>\n-        <section className='mt-14 px-5 py-5 md:px-8 sm:ml-64'>\n-          <h1 className='text-xl mb-4 flex font-semibold text-gray-900 sm:text-2xl dark:text-white'>\n-            <HiHome  className=\"mr-2 h-8 w-8\" /> \n-            <span>Data Rumah</span>\n-          </h1>\n-          \n-          <div className=\"mb-4\">\n-              <ul className='flex gap-4'>\n-                  {Object.entries(statusCounts).map(([status, count]) => (\n-                      <li key={count}>{`${status}: ${count} Rumah`}</li>\n-                  ))}\n-              </ul>\n-          </div>\n-\n-          <div className=\"max-w-sm mb-4\">\n-            <TextInput \n-              name=\"name\"\n-              placeholder=\"Cari\"\n-              value={searchTerm}\n-              onChange={handleSearchChange}\n-              className=\"mr-2\"\n-              icon={HiOutlineSearch} \n-               />\n-          </div>\n-          \n-          <div className='overflow-x-auto '>\n-            <Table hoverable>\n-                <Table.Head>\n-                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>No</Table.HeadCell>\n-                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Rumah</Table.HeadCell>\n-                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>No. WA</Table.HeadCell>\n-                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Nama</Table.HeadCell>\n-                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Status</Table.HeadCell>\n-                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Tarif IPL</Table.HeadCell>\n-                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>\n-                        <span className=\"sr-only\">Edit</span>\n-                    </Table.HeadCell>\n-                </Table.Head>\n-                <Table.Body className=\"divide-y\">\n-                    {currentPageData.map((house, index) => (\n-                        <Table.Row key={index} className=\"bg-white dark:border-gray-700 dark:bg-gray-800\">\n-                            <Table.Cell  className=\"py-2 px-4 md:py-3 md:px- whitespace-nowrap font-medium text-gray-900 dark:text-white\">\n-                                {offset + index + 1}\n-                            </Table.Cell>\n-                            <Table.Cell className='py-2 px-4 md:py-3 md:px-'>{house.house_id}</Table.Cell>\n                             <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{house.resident_name}</Table.Cell>\n                             <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{house.occupancy_status}</Table.Cell>\n                             <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{formatCurrency(house.fee)}</Table.Cell>\n                             <Table.Cell className='py-2 px-4 md:py-3 md:px-'>\n"
                },
                {
                    "date": 1722425333967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,11 +181,10 @@\n                             <Table.Cell  className=\"py-2 px-4 md:py-3 md:px- whitespace-nowrap font-medium text-gray-900 dark:text-white\">\n                                 {offset + index + 1}\n                             </Table.Cell>\n                             <Table.Cell className='py-2 px-4 md:py-3 md:px-'>{house.house_id}</Table.Cell>\n-\n+                            <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{house.resident_name}</Table.Cell>\n                             <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{house.whatsapp_number}</Table.Cell>\n-                            <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{house.resident_name}</Table.Cell>\n                             <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{house.occupancy_status}</Table.Cell>\n                             <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{formatCurrency(house.fee)}</Table.Cell>\n                             <Table.Cell className='py-2 px-4 md:py-3 md:px-'>\n                                 {/* <Button size=\"sm\" onClick={() => handleEditClick(house)}>\n"
                },
                {
                    "date": 1722425360805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,317 @@\n+// pages/home.js\n+import { getSession, useSession } from 'next-auth/react';\n+import { useRouter } from 'next/router';\n+import { useEffect,useState } from 'react';\n+import axios from 'axios';\n+import { useRequireAuth } from '../../utils/authUtils'; \n+import ReactPaginate from 'react-paginate';\n+\n+import { Table } from \"flowbite-react\";\n+import { Button } from \"flowbite-react\";\n+import { Label, TextInput,Drawer,Select,Dropdown } from \"flowbite-react\";\n+import Header from '../../components/Header';\n+import SideMenu from '../../components/dashboard/Sidebar'\n+import Spinner from '../../components/Spinner';\n+import { HiPencilAlt } from \"react-icons/hi\";\n+import { HiHome } from \"react-icons/hi\";\n+import { HiMail } from \"react-icons/hi\";\n+import { HiOutlineSearch } from \"react-icons/hi\";\n+import {  FaCheckCircle, FaTimesCircle, FaHourglassHalf,FaRegEdit,FaEye,FaRegTrashAlt } from 'react-icons/fa';\n+import { FaEllipsisH } from \"react-icons/fa\";\n+import { FaExchangeAlt } from \"react-icons/fa\";\n+\n+const ITEMS_PER_PAGE = 10;\n+\n+const Houses = ({ initialHouses }) => {\n+  const { useAuthRedirect } = useRequireAuth(['admin', 'editor', 'superadmin']);\n+  useAuthRedirect();\n+\n+  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n+  const toggleSidebar = () => {\n+    setIsSidebarOpen(!isSidebarOpen);\n+  };\n+  const { data: session, status } = useSession();\n+  // /console.log(session)\n+  //const token = session.accessToken;\n+  const [houses, setHouses] = useState([initialHouses]);\n+  const [searchTerm, setSearchTerm] = useState('');\n+  const [currentPage, setCurrentPage] = useState(0);\n+  const [filter, setFilter] = useState({ name: '', house_id: '' });\n+  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n+  const [editData, setEditData] = useState(null);\n+  const [loading, setLoading] = useState(true);\n+\n+  useEffect(() => {\n+    if (session) {\n+        const fetchHouses = async () => {\n+            try {\n+                const res = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}/houses/all`, {\n+                    headers: {\n+                      Authorization: `Bearer ${session.accessToken}`,\n+                    },\n+                });\n+                setHouses(res.data);\n+                setLoading(false);\n+            } catch (error) {\n+                console.error('Error fetching houses data:', error);\n+                setLoading(false);\n+            }\n+        };\n+\n+        fetchHouses();\n+    }\n+  }, [session, status]);\n+\n+  const formatCurrency = (amount) => {\n+    return new Intl.NumberFormat('id-ID', {\n+        style: 'currency',\n+        currency: 'IDR',\n+        minimumFractionDigits: 0,\n+    }).format(amount);\n+  };\n+\n+  const handlePageClick = (data) => {\n+    setCurrentPage(data.selected);\n+  };\n+\n+  const handleFilterChange = (e) => {\n+    const { name, value } = e.target;\n+    setFilter({ ...filter, [name]: value });\n+  };  \n+  \n+  const handleSearchChange = (event) => {\n+    setSearchTerm(event.target.value);\n+  };\n+\n+  const filteredHouses = houses.filter(house => \n+    (house.resident_name && house.resident_name.toLowerCase().includes(searchTerm.toLowerCase())) ||\n+    (house.house_id && house.house_id.toLowerCase().includes(searchTerm.toLowerCase()))\n+  );\n+\n+  const offset = currentPage * ITEMS_PER_PAGE;\n+  const currentPageData = filteredHouses.slice(offset, offset + ITEMS_PER_PAGE);\n+\n+  const handleEditClick = (house) => {\n+    setEditData(house);\n+    setIsDrawerOpen(true);\n+  };\n+\n+  const handleSaveChanges = async () => {\n+    try {\n+        const res = await axios.put(`${process.env.NEXT_PUBLIC_API_URL}/houses/update/${editData._id}`, editData, {\n+            headers: {\n+                Authorization: `Bearer ${session.accessToken}`,\n+            },\n+        });\n+        setHouses(houses.map(house => house._id === editData._id ? res.data : house));\n+        setIsDrawerOpen(false);\n+    } catch (error) {\n+        console.error('Error updating house data:', error);\n+    }\n+  };\n+\n+  const handleInputChange = (e) => {\n+    const { name, value } = e.target;\n+    setEditData({ ...editData, [name]: value });\n+  };\n+\n+  // Calculate house status counts\n+  const statusCounts = houses.reduce((acc, house) => {\n+    const status = house.occupancy_status || 'Unknown';\n+    if (!acc[status]) {\n+        acc[status] = 0;\n+    }\n+    acc[status]++;\n+    return acc;\n+  }, {});\n+\n+\n+  if (loading) {\n+    return <Spinner />;\n+  }\n+\n+  return (\n+    <>\n+    \n+    <Header toggleSidebar={toggleSidebar}/>\n+    <main className='max-w-screen-xl mx-auto'>\n+      <div className='w-full'>\n+        <SideMenu isOpen={isSidebarOpen}/>\n+        <section className='mt-14 px-5 py-5 md:px-8 sm:ml-64'>\n+          <h1 className='text-xl mb-4 flex font-semibold text-gray-900 sm:text-2xl dark:text-white'>\n+            <HiHome  className=\"mr-2 h-8 w-8\" /> \n+            <span>Data Rumah</span>\n+          </h1>\n+          \n+          <div className=\"mb-4\">\n+              <ul className='flex gap-4'>\n+                  {Object.entries(statusCounts).map(([status, count]) => (\n+                      <li key={count}>{`${status}: ${count} Rumah`}</li>\n+                  ))}\n+              </ul>\n+          </div>\n+\n+          <div className=\"max-w-sm mb-4\">\n+            <TextInput \n+              name=\"name\"\n+              placeholder=\"Cari\"\n+              value={searchTerm}\n+              onChange={handleSearchChange}\n+              className=\"mr-2\"\n+              icon={HiOutlineSearch} \n+               />\n+          </div>\n+          \n+          <div className='overflow-x-auto '>\n+            <Table hoverable>\n+                <Table.Head>\n+                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>No</Table.HeadCell>\n+                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Rumah</Table.HeadCell>\n+                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Nama</Table.HeadCell>\n+                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>No. WA</Table.HeadCell>\n+                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Status</Table.HeadCell>\n+                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Tarif IPL</Table.HeadCell>\n+                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>\n+                        <span className=\"sr-only\">Edit</span>\n+                    </Table.HeadCell>\n+                </Table.Head>\n+                <Table.Body className=\"divide-y\">\n+                    {currentPageData.map((house, index) => (\n+                        <Table.Row key={index} className=\"bg-white dark:border-gray-700 dark:bg-gray-800\">\n+                            <Table.Cell  className=\"py-2 px-4 md:py-3 md:px- whitespace-nowrap font-medium text-gray-900 dark:text-white\">\n+                                {offset + index + 1}\n+                            </Table.Cell>\n+                            <Table.Cell className='py-2 px-4 md:py-3 md:px-'>{house.house_id}</Table.Cell>\n+                            <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{house.resident_name}</Table.Cell>\n+                            <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{house.whatsapp_number}</Table.Cell>\n+                            <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{house.occupancy_status}</Table.Cell>\n+                            <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{formatCurrency(house.fee)}</Table.Cell>\n+                            <Table.Cell className='py-2 px-4 md:py-3 md:px-'>\n+                                {/* <Button size=\"sm\" onClick={() => handleEditClick(house)}>\n+                                    <HiPencilAlt  className=\"md:mr-2 h-4 w-4\" />\n+                                    <span className='hidden md:block'>Edit</span>\n+                                </Button> */}\n+\n+                          <Dropdown  className=\"relative z-50 cursor-pointer\" align=\"right\" label=\"\" renderTrigger={() => <span><FaEllipsisH  className=\"h-4 w-4 cursor-pointer\" /></span>}>\n+                            <Dropdown.Item onClick={() => handleEditClick(house)}><FaRegEdit className='mr-1'/><span>Edit</span></Dropdown.Item>\n+                            <Dropdown.Item><FaEye className='mr-1'/><span>View</span></Dropdown.Item>\n+                            <Dropdown.Item  ><FaRegTrashAlt className='mr-1' /><span>Delete</span></Dropdown.Item>\n+                          </Dropdown>\n+\n+                            </Table.Cell>\n+                        </Table.Row>\n+                    ))}\n+                </Table.Body>\n+            </Table>\n+          </div>\n+\n+          <nav className='py-6'>\n+          <ReactPaginate\n+                previousLabel={'Previous'}\n+                nextLabel={'Next'}\n+                breakLabel={'...'}\n+                pageCount={Math.ceil(filteredHouses.length / ITEMS_PER_PAGE)}\n+                marginPagesDisplayed={2}\n+                pageRangeDisplayed={5}\n+                onPageChange={handlePageClick}\n+                containerClassName={'pagination flex justify-center -space-x-px text-sm'}\n+                pageClassName={'page-item'}\n+                pageLinkClassName={'flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'}\n+                previousClassName={'page-item'}\n+                previousLinkClassName={'flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'}\n+                nextClassName={'page-item'}\n+                nextLinkClassName={'flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'}\n+                breakClassName={'page-item'}\n+                breakLinkClassName={'flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'}\n+                activeClassName={'active'}\n+                activeLinkClassName={'bg-gray-300'}\n+            />\n+          </nav>\n+        </section>\n+\n+        {editData && (\n+          <Drawer className='pt-16' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)} position=\"right\">\n+          <Drawer.Header title=\"Edit Data Rumah\" titleIcon={HiHome}/>\n+            <Drawer.Items>\n+                <div>\n+                    <label className=\"block mb-2 text-sm font-medium text-gray-700\">Nama</label>\n+                    <TextInput\n+                        name=\"resident_name\"\n+                        value={editData?.resident_name || ''}\n+                        onChange={handleInputChange}\n+                        className=\"mb-4\"\n+                    />\n+                    <label className=\"block mb-2 text-sm font-medium text-gray-700\">Status</label>\n+                      <Select\n+                        id=\"occupancy_status\"\n+                        name=\"occupancy_status\"\n+                        value={editData?.occupancy_status || ''}\n+                        onChange={handleInputChange}\n+                        className=\"mb-4\"\n+                      >\n+                          <option value=\"Kosong\">Kosong</option>\n+                          <option value=\"Isi\">Isi</option>\n+                          <option value=\"Weekend\">Weekend</option>\n+                          <option value=\"Tidak ada kontak\">Tidak ada kontak</option>\n+                      </Select>\n+                    <label className=\"block mb-2 text-sm font-medium text-gray-700\">Tarif IPL</label>\n+                    <TextInput\n+                        name=\"fee\"\n+                        value={editData?.fee || ''}\n+                        onChange={handleInputChange}\n+                        className=\"mb-4\"\n+                    />\n+                </div>\n+                <div className='flex'>\n+                <Button className='mr-4' size='md' onClick={handleSaveChanges}>Simpan</Button>\n+                <Button color=\"gray\" size='md' onClick={() => setIsDrawerOpen(false)}>Batal</Button>\n+                </div>\n+            </Drawer.Items>\n+            \n+          </Drawer>\n+        )}\n+        \n+       \n+      </div>\n+      \n+      \n+    </main>\n+    </>\n+  );\n+}\n+\n+export const getServerSideProps = async (context) => {\n+  const session = await getSession(context);\n+  \n+  if (!session) {\n+      return {\n+          redirect: {\n+              destination: '/',\n+              permanent: false,\n+          },\n+      };\n+  }\n+\n+  try {\n+      const res = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}/houses/all`, {\n+          headers: {\n+              Authorization: `Bearer ${session.accessToken}`,\n+          },\n+      });\n+      return {\n+          props: {\n+              initialHouses: res.data,\n+          },\n+      };\n+  } catch (error) {\n+      console.error('Error fetching houses data:', error);\n+      return {\n+          props: {\n+              initialHouses: [],\n+          },\n+      };\n+  }\n+};\n+\n+\n+export default Houses;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722425478674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -240,320 +240,10 @@\n                         value={editData?.resident_name || ''}\n                         onChange={handleInputChange}\n                         className=\"mb-4\"\n                     />\n-                    <label className=\"block mb-2 text-sm font-medium text-gray-700\">Status</label>\n-                      <Select\n-                        id=\"occupancy_status\"\n-                        name=\"occupancy_status\"\n-                        value={editData?.occupancy_status || ''}\n-                        onChange={handleInputChange}\n-                        className=\"mb-4\"\n-                      >\n-                          <option value=\"Kosong\">Kosong</option>\n-                          <option value=\"Isi\">Isi</option>\n-                          <option value=\"Weekend\">Weekend</option>\n-                          <option value=\"Tidak ada kontak\">Tidak ada kontak</option>\n-                      </Select>\n-                    <label className=\"block mb-2 text-sm font-medium text-gray-700\">Tarif IPL</label>\n+                    <label className=\"block mb-2 text-sm font-medium text-gray-700\">No. Whatsapp</label>\n                     <TextInput\n-                        name=\"fee\"\n-                        value={editData?.fee || ''}\n-                        onChange={handleInputChange}\n-                        className=\"mb-4\"\n-                    />\n-                </div>\n-                <div className='flex'>\n-                <Button className='mr-4' size='md' onClick={handleSaveChanges}>Simpan</Button>\n-                <Button color=\"gray\" size='md' onClick={() => setIsDrawerOpen(false)}>Batal</Button>\n-                </div>\n-            </Drawer.Items>\n-            \n-          </Drawer>\n-        )}\n-        \n-       \n-      </div>\n-      \n-      \n-    </main>\n-    </>\n-  );\n-}\n-\n-export const getServerSideProps = async (context) => {\n-  const session = await getSession(context);\n-  \n-  if (!session) {\n-      return {\n-          redirect: {\n-              destination: '/',\n-              permanent: false,\n-          },\n-      };\n-  }\n-\n-  try {\n-      const res = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}/houses/all`, {\n-          headers: {\n-              Authorization: `Bearer ${session.accessToken}`,\n-          },\n-      });\n-      return {\n-          props: {\n-              initialHouses: res.data,\n-          },\n-      };\n-  } catch (error) {\n-      console.error('Error fetching houses data:', error);\n-      return {\n-          props: {\n-              initialHouses: [],\n-          },\n-      };\n-  }\n-};\n-\n-\n-export default Houses;\n-// pages/home.js\n-import { getSession, useSession } from 'next-auth/react';\n-import { useRouter } from 'next/router';\n-import { useEffect,useState } from 'react';\n-import axios from 'axios';\n-import { useRequireAuth } from '../../utils/authUtils'; \n-import ReactPaginate from 'react-paginate';\n-\n-import { Table } from \"flowbite-react\";\n-import { Button } from \"flowbite-react\";\n-import { Label, TextInput,Drawer,Select,Dropdown } from \"flowbite-react\";\n-import Header from '../../components/Header';\n-import SideMenu from '../../components/dashboard/Sidebar'\n-import Spinner from '../../components/Spinner';\n-import { HiPencilAlt } from \"react-icons/hi\";\n-import { HiHome } from \"react-icons/hi\";\n-import { HiMail } from \"react-icons/hi\";\n-import { HiOutlineSearch } from \"react-icons/hi\";\n-import {  FaCheckCircle, FaTimesCircle, FaHourglassHalf,FaRegEdit,FaEye,FaRegTrashAlt } from 'react-icons/fa';\n-import { FaEllipsisH } from \"react-icons/fa\";\n-import { FaExchangeAlt } from \"react-icons/fa\";\n-\n-const ITEMS_PER_PAGE = 10;\n-\n-const Houses = ({ initialHouses }) => {\n-  const { useAuthRedirect } = useRequireAuth(['admin', 'editor', 'superadmin']);\n-  useAuthRedirect();\n-\n-  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n-  const toggleSidebar = () => {\n-    setIsSidebarOpen(!isSidebarOpen);\n-  };\n-  const { data: session, status } = useSession();\n-  // /console.log(session)\n-  //const token = session.accessToken;\n-  const [houses, setHouses] = useState([initialHouses]);\n-  const [searchTerm, setSearchTerm] = useState('');\n-  const [currentPage, setCurrentPage] = useState(0);\n-  const [filter, setFilter] = useState({ name: '', house_id: '' });\n-  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n-  const [editData, setEditData] = useState(null);\n-  const [loading, setLoading] = useState(true);\n-\n-  useEffect(() => {\n-    if (session) {\n-        const fetchHouses = async () => {\n-            try {\n-                const res = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}/houses/all`, {\n-                    headers: {\n-                      Authorization: `Bearer ${session.accessToken}`,\n-                    },\n-                });\n-                setHouses(res.data);\n-                setLoading(false);\n-            } catch (error) {\n-                console.error('Error fetching houses data:', error);\n-                setLoading(false);\n-            }\n-        };\n-\n-        fetchHouses();\n-    }\n-  }, [session, status]);\n-\n-  const formatCurrency = (amount) => {\n-    return new Intl.NumberFormat('id-ID', {\n-        style: 'currency',\n-        currency: 'IDR',\n-        minimumFractionDigits: 0,\n-    }).format(amount);\n-  };\n-\n-  const handlePageClick = (data) => {\n-    setCurrentPage(data.selected);\n-  };\n-\n-  const handleFilterChange = (e) => {\n-    const { name, value } = e.target;\n-    setFilter({ ...filter, [name]: value });\n-  };  \n-  \n-  const handleSearchChange = (event) => {\n-    setSearchTerm(event.target.value);\n-  };\n-\n-  const filteredHouses = houses.filter(house => \n-    (house.resident_name && house.resident_name.toLowerCase().includes(searchTerm.toLowerCase())) ||\n-    (house.house_id && house.house_id.toLowerCase().includes(searchTerm.toLowerCase()))\n-  );\n-\n-  const offset = currentPage * ITEMS_PER_PAGE;\n-  const currentPageData = filteredHouses.slice(offset, offset + ITEMS_PER_PAGE);\n-\n-  const handleEditClick = (house) => {\n-    setEditData(house);\n-    setIsDrawerOpen(true);\n-  };\n-\n-  const handleSaveChanges = async () => {\n-    try {\n-        const res = await axios.put(`${process.env.NEXT_PUBLIC_API_URL}/houses/update/${editData._id}`, editData, {\n-            headers: {\n-                Authorization: `Bearer ${session.accessToken}`,\n-            },\n-        });\n-        setHouses(houses.map(house => house._id === editData._id ? res.data : house));\n-        setIsDrawerOpen(false);\n-    } catch (error) {\n-        console.error('Error updating house data:', error);\n-    }\n-  };\n-\n-  const handleInputChange = (e) => {\n-    const { name, value } = e.target;\n-    setEditData({ ...editData, [name]: value });\n-  };\n-\n-  // Calculate house status counts\n-  const statusCounts = houses.reduce((acc, house) => {\n-    const status = house.occupancy_status || 'Unknown';\n-    if (!acc[status]) {\n-        acc[status] = 0;\n-    }\n-    acc[status]++;\n-    return acc;\n-  }, {});\n-\n-\n-  if (loading) {\n-    return <Spinner />;\n-  }\n-\n-  return (\n-    <>\n-    \n-    <Header toggleSidebar={toggleSidebar}/>\n-    <main className='max-w-screen-xl mx-auto'>\n-      <div className='w-full'>\n-        <SideMenu isOpen={isSidebarOpen}/>\n-        <section className='mt-14 px-5 py-5 md:px-8 sm:ml-64'>\n-          <h1 className='text-xl mb-4 flex font-semibold text-gray-900 sm:text-2xl dark:text-white'>\n-            <HiHome  className=\"mr-2 h-8 w-8\" /> \n-            <span>Data Rumah</span>\n-          </h1>\n-          \n-          <div className=\"mb-4\">\n-              <ul className='flex gap-4'>\n-                  {Object.entries(statusCounts).map(([status, count]) => (\n-                      <li key={count}>{`${status}: ${count} Rumah`}</li>\n-                  ))}\n-              </ul>\n-          </div>\n-\n-          <div className=\"max-w-sm mb-4\">\n-            <TextInput \n-              name=\"name\"\n-              placeholder=\"Cari\"\n-              value={searchTerm}\n-              onChange={handleSearchChange}\n-              className=\"mr-2\"\n-              icon={HiOutlineSearch} \n-               />\n-          </div>\n-          \n-          <div className='overflow-x-auto '>\n-            <Table hoverable>\n-                <Table.Head>\n-                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>No</Table.HeadCell>\n-                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Rumah</Table.HeadCell>\n-                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>No. WA</Table.HeadCell>\n-                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Nama</Table.HeadCell>\n-                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Status</Table.HeadCell>\n-                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Tarif IPL</Table.HeadCell>\n-                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>\n-                        <span className=\"sr-only\">Edit</span>\n-                    </Table.HeadCell>\n-                </Table.Head>\n-                <Table.Body className=\"divide-y\">\n-                    {currentPageData.map((house, index) => (\n-                        <Table.Row key={index} className=\"bg-white dark:border-gray-700 dark:bg-gray-800\">\n-                            <Table.Cell  className=\"py-2 px-4 md:py-3 md:px- whitespace-nowrap font-medium text-gray-900 dark:text-white\">\n-                                {offset + index + 1}\n-                            </Table.Cell>\n-                            <Table.Cell className='py-2 px-4 md:py-3 md:px-'>{house.house_id}</Table.Cell>\n-                            <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{house.resident_name}</Table.Cell>\n-                            <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{house.whatsapp_number}</Table.Cell>\n-                            <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{house.occupancy_status}</Table.Cell>\n-                            <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{formatCurrency(house.fee)}</Table.Cell>\n-                            <Table.Cell className='py-2 px-4 md:py-3 md:px-'>\n-                                {/* <Button size=\"sm\" onClick={() => handleEditClick(house)}>\n-                                    <HiPencilAlt  className=\"md:mr-2 h-4 w-4\" />\n-                                    <span className='hidden md:block'>Edit</span>\n-                                </Button> */}\n-\n-                          <Dropdown  className=\"relative z-50 cursor-pointer\" align=\"right\" label=\"\" renderTrigger={() => <span><FaEllipsisH  className=\"h-4 w-4 cursor-pointer\" /></span>}>\n-                            <Dropdown.Item onClick={() => handleEditClick(house)}><FaRegEdit className='mr-1'/><span>Edit</span></Dropdown.Item>\n-                            <Dropdown.Item><FaEye className='mr-1'/><span>View</span></Dropdown.Item>\n-                            <Dropdown.Item  ><FaRegTrashAlt className='mr-1' /><span>Delete</span></Dropdown.Item>\n-                          </Dropdown>\n-\n-                            </Table.Cell>\n-                        </Table.Row>\n-                    ))}\n-                </Table.Body>\n-            </Table>\n-          </div>\n-\n-          <nav className='py-6'>\n-          <ReactPaginate\n-                previousLabel={'Previous'}\n-                nextLabel={'Next'}\n-                breakLabel={'...'}\n-                pageCount={Math.ceil(filteredHouses.length / ITEMS_PER_PAGE)}\n-                marginPagesDisplayed={2}\n-                pageRangeDisplayed={5}\n-                onPageChange={handlePageClick}\n-                containerClassName={'pagination flex justify-center -space-x-px text-sm'}\n-                pageClassName={'page-item'}\n-                pageLinkClassName={'flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'}\n-                previousClassName={'page-item'}\n-                previousLinkClassName={'flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'}\n-                nextClassName={'page-item'}\n-                nextLinkClassName={'flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'}\n-                breakClassName={'page-item'}\n-                breakLinkClassName={'flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'}\n-                activeClassName={'active'}\n-                activeLinkClassName={'bg-gray-300'}\n-            />\n-          </nav>\n-        </section>\n-\n-        {editData && (\n-          <Drawer className='pt-16' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)} position=\"right\">\n-          <Drawer.Header title=\"Edit Data Rumah\" titleIcon={HiHome}/>\n-            <Drawer.Items>\n-                <div>\n-                    <label className=\"block mb-2 text-sm font-medium text-gray-700\">Nama</label>\n-                    <TextInput\n                         name=\"resident_name\"\n                         value={editData?.resident_name || ''}\n                         onChange={handleInputChange}\n                         className=\"mb-4\"\n"
                },
                {
                    "date": 1722425525628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -242,10 +242,11 @@\n                         className=\"mb-4\"\n                     />\n                     <label className=\"block mb-2 text-sm font-medium text-gray-700\">No. Whatsapp</label>\n                     <TextInput\n-                        name=\"resident_name\"\n-                        value={editData?.resident_name || ''}\n+                        name=\"whatsapp_number\"\n+                        type=\"number\"\n+                        value={whatsapp_number}\n                         onChange={handleInputChange}\n                         className=\"mb-4\"\n                     />\n                     <label className=\"block mb-2 text-sm font-medium text-gray-700\">Status</label>\n"
                },
                {
                    "date": 1722425564266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -244,9 +244,9 @@\n                     <label className=\"block mb-2 text-sm font-medium text-gray-700\">No. Whatsapp</label>\n                     <TextInput\n                         name=\"whatsapp_number\"\n                         type=\"number\"\n-                        value={whatsapp_number}\n+                        value={editData?.whatsapp_number || ''}\n                         onChange={handleInputChange}\n                         className=\"mb-4\"\n                     />\n                     <label className=\"block mb-2 text-sm font-medium text-gray-700\">Status</label>\n"
                },
                {
                    "date": 1722425941006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import ReactPaginate from 'react-paginate';\n \n import { Table } from \"flowbite-react\";\n import { Button } from \"flowbite-react\";\n-import { Label, TextInput,Drawer,Select,Dropdown } from \"flowbite-react\";\n+import { Label, TextInput,Drawer,Select,Dropdown,Alert } from \"flowbite-react\";\n import Header from '../../components/Header';\n import SideMenu from '../../components/dashboard/Sidebar'\n import Spinner from '../../components/Spinner';\n import { HiPencilAlt } from \"react-icons/hi\";\n"
                },
                {
                    "date": 1722425958901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,8 +39,11 @@\n   const [filter, setFilter] = useState({ name: '', house_id: '' });\n   const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n   const [editData, setEditData] = useState(null);\n   const [loading, setLoading] = useState(true);\n+  const [showAlert, setShowAlert] = useState(false);\n+  const [alertMessage, setAlertMessage] = useState('');\n+  const [alertType, setAlertType] = useState('success');\n \n   useEffect(() => {\n     if (session) {\n         const fetchHouses = async () => {\n"
                },
                {
                    "date": 1722425978193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,18 @@\n   const [showAlert, setShowAlert] = useState(false);\n   const [alertMessage, setAlertMessage] = useState('');\n   const [alertType, setAlertType] = useState('success');\n \n+  const handleAlertDismiss = () => {\n+    handleAlertTimeout(0);\n+  };\n+\n+  const handleAlertTimeout = (timeoutDuration) => {\n+    setTimeout(() => {\n+      setShowAlert(false);\n+    }, timeoutDuration);\n+  };\n+\n   useEffect(() => {\n     if (session) {\n         const fetchHouses = async () => {\n             try {\n"
                },
                {
                    "date": 1722426020241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,8 +62,13 @@\n                     headers: {\n                       Authorization: `Bearer ${session.accessToken}`,\n                     },\n                 });\n+                setAlertType('success');\n+                setAlertMessage('Data berhasil diupdate');\n+                setShowAlert(true);\n+                handleAlertTimeout(3000);\n+\n                 setHouses(res.data);\n                 setLoading(false);\n             } catch (error) {\n                 console.error('Error fetching houses data:', error);\n"
                },
                {
                    "date": 1722426036764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,8 +70,12 @@\n \n                 setHouses(res.data);\n                 setLoading(false);\n             } catch (error) {\n+              setAlertType('failure');\n+              setAlertMessage('Gagal mengupdate rumah');\n+              setShowAlert(true);\n+              handleAlertTimeout(3000);\n                 console.error('Error fetching houses data:', error);\n                 setLoading(false);\n             }\n         };\n"
                },
                {
                    "date": 1722426053525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -159,8 +159,13 @@\n     <main className='max-w-screen-xl mx-auto'>\n       <div className='w-full'>\n         <SideMenu isOpen={isSidebarOpen}/>\n         <section className='mt-14 px-5 py-5 md:px-8 sm:ml-64'>\n+        {showAlert && (\n+            <Alert className='' color={alertType === 'success' ? 'success' : 'failure'} onDismiss={handleAlertDismiss}>\n+                <span className=\"font-medium\">{alertMessage}</span>\n+            </Alert>\n+        )}\n           <h1 className='text-xl mb-4 flex font-semibold text-gray-900 sm:text-2xl dark:text-white'>\n             <HiHome  className=\"mr-2 h-8 w-8\" /> \n             <span>Data Rumah</span>\n           </h1>\n"
                }
            ],
            "date": 1722424974690,
            "name": "Commit-0",
            "content": "// pages/home.js\nimport { getSession, useSession } from 'next-auth/react';\nimport { useRouter } from 'next/router';\nimport { useEffect,useState } from 'react';\nimport axios from 'axios';\nimport { useRequireAuth } from '../../utils/authUtils'; \nimport ReactPaginate from 'react-paginate';\n\nimport { Table } from \"flowbite-react\";\nimport { Button } from \"flowbite-react\";\nimport { Label, TextInput,Drawer,Select,Dropdown } from \"flowbite-react\";\nimport Header from '../../components/Header';\nimport SideMenu from '../../components/dashboard/Sidebar'\nimport Spinner from '../../components/Spinner';\nimport { HiPencilAlt } from \"react-icons/hi\";\nimport { HiHome } from \"react-icons/hi\";\nimport { HiMail } from \"react-icons/hi\";\nimport { HiOutlineSearch } from \"react-icons/hi\";\n\nconst ITEMS_PER_PAGE = 10;\n\nconst Houses = ({ initialHouses }) => {\n  const { useAuthRedirect } = useRequireAuth(['admin', 'editor', 'superadmin']);\n  useAuthRedirect();\n\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n  const { data: session, status } = useSession();\n  // /console.log(session)\n  //const token = session.accessToken;\n  const [houses, setHouses] = useState([initialHouses]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(0);\n  const [filter, setFilter] = useState({ name: '', house_id: '' });\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const [editData, setEditData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (session) {\n        const fetchHouses = async () => {\n            try {\n                const res = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}/houses/all`, {\n                    headers: {\n                      Authorization: `Bearer ${session.accessToken}`,\n                    },\n                });\n                setHouses(res.data);\n                setLoading(false);\n            } catch (error) {\n                console.error('Error fetching houses data:', error);\n                setLoading(false);\n            }\n        };\n\n        fetchHouses();\n    }\n  }, [session, status]);\n\n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat('id-ID', {\n        style: 'currency',\n        currency: 'IDR',\n        minimumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  const handlePageClick = (data) => {\n    setCurrentPage(data.selected);\n  };\n\n  const handleFilterChange = (e) => {\n    const { name, value } = e.target;\n    setFilter({ ...filter, [name]: value });\n  };  \n  \n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const filteredHouses = houses.filter(house => \n    (house.resident_name && house.resident_name.toLowerCase().includes(searchTerm.toLowerCase())) ||\n    (house.house_id && house.house_id.toLowerCase().includes(searchTerm.toLowerCase()))\n  );\n\n  const offset = currentPage * ITEMS_PER_PAGE;\n  const currentPageData = filteredHouses.slice(offset, offset + ITEMS_PER_PAGE);\n\n  const handleEditClick = (house) => {\n    setEditData(house);\n    setIsDrawerOpen(true);\n  };\n\n  const handleSaveChanges = async () => {\n    try {\n        const res = await axios.put(`${process.env.NEXT_PUBLIC_API_URL}/houses/update/${editData._id}`, editData, {\n            headers: {\n                Authorization: `Bearer ${session.accessToken}`,\n            },\n        });\n        setHouses(houses.map(house => house._id === editData._id ? res.data : house));\n        setIsDrawerOpen(false);\n    } catch (error) {\n        console.error('Error updating house data:', error);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setEditData({ ...editData, [name]: value });\n  };\n\n  // Calculate house status counts\n  const statusCounts = houses.reduce((acc, house) => {\n    const status = house.occupancy_status || 'Unknown';\n    if (!acc[status]) {\n        acc[status] = 0;\n    }\n    acc[status]++;\n    return acc;\n  }, {});\n\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  return (\n    <>\n    \n    <Header toggleSidebar={toggleSidebar}/>\n    <main className='max-w-screen-xl mx-auto'>\n      <div className='w-full'>\n        <SideMenu isOpen={isSidebarOpen}/>\n        <section className='mt-14 px-5 py-5 md:px-8 sm:ml-64'>\n          <h1 className='text-xl mb-4 flex font-semibold text-gray-900 sm:text-2xl dark:text-white'>\n            <HiHome  className=\"mr-2 h-8 w-8\" /> \n            <span>Data Rumah</span>\n          </h1>\n          \n          <div className=\"mb-4\">\n              <ul className='flex gap-4'>\n                  {Object.entries(statusCounts).map(([status, count]) => (\n                      <li key={count}>{`${status}: ${count} Rumah`}</li>\n                  ))}\n              </ul>\n          </div>\n\n          <div className=\"max-w-sm mb-4\">\n            <TextInput \n              name=\"name\"\n              placeholder=\"Cari\"\n              value={searchTerm}\n              onChange={handleSearchChange}\n              className=\"mr-2\"\n              icon={HiOutlineSearch} \n               />\n          </div>\n          \n          <div className='overflow-x-auto '>\n            <Table hoverable>\n                <Table.Head>\n                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>No</Table.HeadCell>\n                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>No Rumah</Table.HeadCell>\n                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Nama</Table.HeadCell>\n                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Status</Table.HeadCell>\n                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>Tarif IPL</Table.HeadCell>\n                    <Table.HeadCell className='py-2 px-4 md:py-3 md:px-3'>\n                        <span className=\"sr-only\">Edit</span>\n                    </Table.HeadCell>\n                </Table.Head>\n                <Table.Body className=\"divide-y\">\n                    {currentPageData.map((house, index) => (\n                        <Table.Row key={index} className=\"bg-white dark:border-gray-700 dark:bg-gray-800\">\n                            <Table.Cell  className=\"py-2 px-4 md:py-3 md:px- whitespace-nowrap font-medium text-gray-900 dark:text-white\">\n                                {offset + index + 1}\n                            </Table.Cell>\n                            <Table.Cell className='py-2 px-4 md:py-3 md:px-'>{house.house_id}</Table.Cell>\n                            <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{house.resident_name}</Table.Cell>\n                            <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{house.occupancy_status}</Table.Cell>\n                            <Table.Cell  className='py-2 px-4 md:py-3 md:px-'>{formatCurrency(house.fee)}</Table.Cell>\n                            <Table.Cell className='py-2 px-4 md:py-3 md:px-'>\n                                <Button size=\"sm\" onClick={() => handleEditClick(house)}>\n                                    <HiPencilAlt  className=\"md:mr-2 h-4 w-4\" />\n                                    <span className='hidden md:block'>Edit</span>\n                                </Button>\n                            </Table.Cell>\n                        </Table.Row>\n                    ))}\n                </Table.Body>\n            </Table>\n          </div>\n\n          <nav className='py-6'>\n          <ReactPaginate\n                previousLabel={'Previous'}\n                nextLabel={'Next'}\n                breakLabel={'...'}\n                pageCount={Math.ceil(filteredHouses.length / ITEMS_PER_PAGE)}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={5}\n                onPageChange={handlePageClick}\n                containerClassName={'pagination flex justify-center -space-x-px text-sm'}\n                pageClassName={'page-item'}\n                pageLinkClassName={'flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'}\n                previousClassName={'page-item'}\n                previousLinkClassName={'flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'}\n                nextClassName={'page-item'}\n                nextLinkClassName={'flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'}\n                breakClassName={'page-item'}\n                breakLinkClassName={'flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'}\n                activeClassName={'active'}\n                activeLinkClassName={'bg-gray-300'}\n            />\n          </nav>\n        </section>\n\n        {editData && (\n          <Drawer className='pt-16' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)} position=\"right\">\n          <Drawer.Header title=\"Edit Data Rumah\" titleIcon={HiHome}/>\n            <Drawer.Items>\n                <div>\n                    <label className=\"block mb-2 text-sm font-medium text-gray-700\">Nama</label>\n                    <TextInput\n                        name=\"resident_name\"\n                        value={editData?.resident_name || ''}\n                        onChange={handleInputChange}\n                        className=\"mb-4\"\n                    />\n                    <label className=\"block mb-2 text-sm font-medium text-gray-700\">Status</label>\n                      <Select\n                        id=\"occupancy_status\"\n                        name=\"occupancy_status\"\n                        value={editData?.occupancy_status || ''}\n                        onChange={handleInputChange}\n                        className=\"mb-4\"\n                      >\n                          <option value=\"Kosong\">Kosong</option>\n                          <option value=\"Isi\">Isi</option>\n                          <option value=\"Weekend\">Weekend</option>\n                          <option value=\"Tidak ada kontak\">Tidak ada kontak</option>\n                      </Select>\n                    <label className=\"block mb-2 text-sm font-medium text-gray-700\">Tarif IPL</label>\n                    <TextInput\n                        name=\"fee\"\n                        value={editData?.fee || ''}\n                        onChange={handleInputChange}\n                        className=\"mb-4\"\n                    />\n                </div>\n                <div className='flex'>\n                <Button className='mr-4' size='md' onClick={handleSaveChanges}>Simpan</Button>\n                <Button color=\"gray\" size='md' onClick={() => setIsDrawerOpen(false)}>Batal</Button>\n                </div>\n            </Drawer.Items>\n            \n          </Drawer>\n        )}\n        \n       \n      </div>\n      \n      \n    </main>\n    </>\n  );\n}\n\nexport const getServerSideProps = async (context) => {\n  const session = await getSession(context);\n  \n  if (!session) {\n      return {\n          redirect: {\n              destination: '/',\n              permanent: false,\n          },\n      };\n  }\n\n  try {\n      const res = await axios.get(`${process.env.NEXT_PUBLIC_API_URL}/houses/all`, {\n          headers: {\n              Authorization: `Bearer ${session.accessToken}`,\n          },\n      });\n      return {\n          props: {\n              initialHouses: res.data,\n          },\n      };\n  } catch (error) {\n      console.error('Error fetching houses data:', error);\n      return {\n          props: {\n              initialHouses: [],\n          },\n      };\n  }\n};\n\n\nexport default Houses;"
        }
    ]
}