{
    "sourceFile": "pages/api/auth/[...nextauth].js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1722413983193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1722414004801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,10 +34,10 @@\n           token: id_token,\n         });\n \n         const { token } = response.data.jwtToken;\n-        //user.jwtToken = response.data.jwtToken;\n-        //user.role=response.data.user.role;\n+        user.jwtToken = response.data.jwtToken;\n+        user.role=response.data.user.role;\n         //console.log(response.data.user.role)\n         return true;\n         //return `/home`; // Redirect URL after successful login\n       } catch (error) {\n"
                },
                {
                    "date": 1722414076075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n           token: id_token,\n         });\n \n         const { token } = response.data.jwtToken;\n-        user.jwtToken = response.data.jwtToken;\n+        //user.jwtToken = response.data.jwtToken;\n         user.role=response.data.user.role;\n         //console.log(response.data.user.role)\n         return true;\n         //return `/home`; // Redirect URL after successful login\n"
                },
                {
                    "date": 1722414148346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n           token: id_token,\n         });\n \n         const { token } = response.data.jwtToken;\n-        //user.jwtToken = response.data.jwtToken;\n+        user.jwtToken = response.data.jwtToken;\n         user.role=response.data.user.role;\n         //console.log(response.data.user.role)\n         return true;\n         //return `/home`; // Redirect URL after successful login\n"
                },
                {
                    "date": 1722414158343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,9 @@\n     },\n     async signIn({ user, account, profile }) {\n       const { email } = user;\n       const { id_token } = account;\n+      console.log(account)\n \n       try {\n         const response = await axios.post(`${process.env.API_URL}/auth/google`, {\n           token: id_token,\n"
                },
                {
                    "date": 1722414276619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,55 @@\n+// pages/api/auth/[...nextauth].js\n+import NextAuth from 'next-auth';\n+import GoogleProvider from 'next-auth/providers/google';\n+import axios from 'axios';\n+\n+export default NextAuth({\n+  providers: [\n+    GoogleProvider({\n+      clientId: process.env.GOOGLE_CLIENT_ID,\n+      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n+    }),\n+  ],\n+  callbacks: {\n+    async jwt({ token, account,user}) {\n+      if (account) {\n+        // console.log('Account:', account); // Debugging\n+        //console.log('role:', user.role); // Debugging\n+        token.accessToken = user.jwtToken;\n+        token.user = user;\n+      }\n+      return token;\n+    },\n+    async session({session, token  }) {\n+      session.accessToken = token.accessToken;\n+      //session.user = token.user;\n+      return session;\n+    },\n+    async signIn({ user, account, profile }) {\n+      const { email } = user;\n+      const { id_token } = account;\n+      console.log(account)\n+\n+      try {\n+        const response = await axios.post(`${process.env.API_URL}/auth/google`, {\n+          token: id_token,\n+        });\n+\n+        const { token } = response.data.jwtToken;\n+        user.jwtToken = response.data.jwtToken;\n+        user.role=response.data.user.role;\n+        //console.log(response.data.user.role)\n+        return true;\n+        //return `/home`; // Redirect URL after successful login\n+      } catch (error) {\n+        console.error('Error signing in:', error);\n+        return false;\n+      }\n+    },\n+\n+    async redirect({ url, baseUrl }) {\n+      return `/`; // Redirect ke halaman utama setelah login\n+  }\n+  },\n+  secret: process.env.NEXTAUTH_SECRET,\n+});\n"
                },
                {
                    "date": 1722414318722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,56 @@\n+// pages/api/auth/[...nextauth].js\n+import NextAuth from 'next-auth';\n+import GoogleProvider from 'next-auth/providers/google';\n+import axios from 'axios';\n+\n+export default NextAuth({\n+  providers: [\n+    GoogleProvider({\n+      clientId: process.env.GOOGLE_CLIENT_ID,\n+      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n+    }),\n+  ],\n+  callbacks: {\n+    async jwt({ token, account,user}) {\n+      if (account) {\n+        // console.log('Account:', account); // Debugging\n+        //console.log('role:', user.role); // Debugging\n+        token.accessToken = user.jwtToken;\n+        token.user = user;\n+      }\n+      return token;\n+    },\n+    async session({session, token  }) {\n+      session.accessToken = token.accessToken;\n+      //session.user = token.user;\n+      console.log(token)\n+      return session;\n+    },\n+    async signIn({ user, account, profile }) {\n+      const { email } = user;\n+      const { id_token } = account;\n+      //console.log(account)\n+\n+      try {\n+        const response = await axios.post(`${process.env.API_URL}/auth/google`, {\n+          token: id_token,\n+        });\n+\n+        const { token } = response.data.jwtToken;\n+        user.jwtToken = response.data.jwtToken;\n+        user.role=response.data.user.role;\n+        //console.log(response.data.user.role)\n+        return true;\n+        //return `/home`; // Redirect URL after successful login\n+      } catch (error) {\n+        console.error('Error signing in:', error);\n+        return false;\n+      }\n+    },\n+\n+    async redirect({ url, baseUrl }) {\n+      return `/`; // Redirect ke halaman utama setelah login\n+  }\n+  },\n+  secret: process.env.NEXTAUTH_SECRET,\n+});\n"
                },
                {
                    "date": 1722414376500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n           token: id_token,\n         });\n \n         const { token } = response.data.jwtToken;\n-        user.jwtToken = response.data.jwtToken;\n+        //user.jwtToken = response.data.jwtToken;\n         user.role=response.data.user.role;\n         //console.log(response.data.user.role)\n         return true;\n         //return `/home`; // Redirect URL after successful login\n@@ -53,114 +53,4 @@\n   }\n   },\n   secret: process.env.NEXTAUTH_SECRET,\n });\n-// pages/api/auth/[...nextauth].js\n-import NextAuth from 'next-auth';\n-import GoogleProvider from 'next-auth/providers/google';\n-import axios from 'axios';\n-\n-export default NextAuth({\n-  providers: [\n-    GoogleProvider({\n-      clientId: process.env.GOOGLE_CLIENT_ID,\n-      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n-    }),\n-  ],\n-  callbacks: {\n-    async jwt({ token, account,user}) {\n-      if (account) {\n-        // console.log('Account:', account); // Debugging\n-        //console.log('role:', user.role); // Debugging\n-        token.accessToken = user.jwtToken;\n-        token.user = user;\n-      }\n-      return token;\n-    },\n-    async session({session, token  }) {\n-      session.accessToken = token.accessToken;\n-      //session.user = token.user;\n-      return session;\n-    },\n-    async signIn({ user, account, profile }) {\n-      const { email } = user;\n-      const { id_token } = account;\n-      console.log(account)\n-\n-      try {\n-        const response = await axios.post(`${process.env.API_URL}/auth/google`, {\n-          token: id_token,\n-        });\n-\n-        const { token } = response.data.jwtToken;\n-        user.jwtToken = response.data.jwtToken;\n-        user.role=response.data.user.role;\n-        //console.log(response.data.user.role)\n-        return true;\n-        //return `/home`; // Redirect URL after successful login\n-      } catch (error) {\n-        console.error('Error signing in:', error);\n-        return false;\n-      }\n-    },\n-\n-    async redirect({ url, baseUrl }) {\n-      return `/`; // Redirect ke halaman utama setelah login\n-  }\n-  },\n-  secret: process.env.NEXTAUTH_SECRET,\n-});\n-// pages/api/auth/[...nextauth].js\n-import NextAuth from 'next-auth';\n-import GoogleProvider from 'next-auth/providers/google';\n-import axios from 'axios';\n-\n-export default NextAuth({\n-  providers: [\n-    GoogleProvider({\n-      clientId: process.env.GOOGLE_CLIENT_ID,\n-      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n-    }),\n-  ],\n-  callbacks: {\n-    async jwt({ token, account,user}) {\n-      if (account) {\n-        // console.log('Account:', account); // Debugging\n-        //console.log('role:', user.role); // Debugging\n-        token.accessToken = user.jwtToken;\n-        token.user = user;\n-      }\n-      return token;\n-    },\n-    async session({session, token  }) {\n-      session.accessToken = token.accessToken;\n-      session.user = token.user;\n-      return session;\n-    },\n-    async signIn({ user, account, profile }) {\n-      const { email } = user;\n-      const { id_token } = account;\n-      console.log(account)\n-\n-      try {\n-        const response = await axios.post(`${process.env.API_URL}/auth/google`, {\n-          token: id_token,\n-        });\n-\n-        const { token } = response.data.jwtToken;\n-        user.jwtToken = response.data.jwtToken;\n-        user.role=response.data.user.role;\n-        //console.log(response.data.user.role)\n-        return true;\n-        //return `/home`; // Redirect URL after successful login\n-      } catch (error) {\n-        console.error('Error signing in:', error);\n-        return false;\n-      }\n-    },\n-\n-    async redirect({ url, baseUrl }) {\n-      return `/`; // Redirect ke halaman utama setelah login\n-  }\n-  },\n-  secret: process.env.NEXTAUTH_SECRET,\n-});\n"
                },
                {
                    "date": 1722414405500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n           token: id_token,\n         });\n \n         const { token } = response.data.jwtToken;\n-        //user.jwtToken = response.data.jwtToken;\n+        user.jwtToken = response.data.jwtToken;\n         user.role=response.data.user.role;\n         //console.log(response.data.user.role)\n         return true;\n         //return `/home`; // Redirect URL after successful login\n"
                },
                {
                    "date": 1722414570157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n     },\n     async session({session, token  }) {\n       session.accessToken = token.accessToken;\n       //session.user = token.user;\n-      console.log(token)\n+      console.log(token.user.role)\n       return session;\n     },\n     async signIn({ user, account, profile }) {\n       const { email } = user;\n"
                },
                {
                    "date": 1722414648719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,56 @@\n+// pages/api/auth/[...nextauth].js\n+import NextAuth from 'next-auth';\n+import GoogleProvider from 'next-auth/providers/google';\n+import axios from 'axios';\n+\n+export default NextAuth({\n+  providers: [\n+    GoogleProvider({\n+      clientId: process.env.GOOGLE_CLIENT_ID,\n+      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n+    }),\n+  ],\n+  callbacks: {\n+    async jwt({ token, account,user}) {\n+      if (account) {\n+        // console.log('Account:', account); // Debugging\n+        //console.log('role:', user.role); // Debugging\n+        token.accessToken = user.jwtToken;\n+        token.user = user;\n+      }\n+      return token;\n+    },\n+    async session({session, token  }) {\n+      session.accessToken = token.accessToken;\n+      session.user = token.user;\n+      console.log(token.user.role)\n+      return session;\n+    },\n+    async signIn({ user, account, profile }) {\n+      const { email } = user;\n+      const { id_token } = account;\n+      //console.log(account)\n+\n+      try {\n+        const response = await axios.post(`${process.env.API_URL}/auth/google`, {\n+          token: id_token,\n+        });\n+\n+        const { token } = response.data.jwtToken;\n+        user.jwtToken = response.data.jwtToken;\n+        user.role=response.data.user.role;\n+        //console.log(response.data.user.role)\n+        return true;\n+        //return `/home`; // Redirect URL after successful login\n+      } catch (error) {\n+        console.error('Error signing in:', error);\n+        return false;\n+      }\n+    },\n+\n+    async redirect({ url, baseUrl }) {\n+      return `/`; // Redirect ke halaman utama setelah login\n+  }\n+  },\n+  secret: process.env.NEXTAUTH_SECRET,\n+});\n"
                },
                {
                    "date": 1722414728141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,56 @@\n+// pages/api/auth/[...nextauth].js\n+import NextAuth from 'next-auth';\n+import GoogleProvider from 'next-auth/providers/google';\n+import axios from 'axios';\n+\n+export default NextAuth({\n+  providers: [\n+    GoogleProvider({\n+      clientId: process.env.GOOGLE_CLIENT_ID,\n+      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n+    }),\n+  ],\n+  callbacks: {\n+    async jwt({ token, account,user}) {\n+      if (account) {\n+        // console.log('Account:', account); // Debugging\n+        //console.log('role:', user.role); // Debugging\n+        token.accessToken = user.jwtToken;\n+        token.user = user;\n+      }\n+      return token;\n+    },\n+    async session({session, token  }) {\n+      session.accessToken = token.accessToken;\n+      session.user = token.user.role;\n+      //console.log(token.user.role)\n+      return session;\n+    },\n+    async signIn({ user, account, profile }) {\n+      const { email } = user;\n+      const { id_token } = account;\n+      //console.log(account)\n+\n+      try {\n+        const response = await axios.post(`${process.env.API_URL}/auth/google`, {\n+          token: id_token,\n+        });\n+\n+        const { token } = response.data.jwtToken;\n+        user.jwtToken = response.data.jwtToken;\n+        user.role=response.data.user.role;\n+        //console.log(response.data.user.role)\n+        return true;\n+        //return `/home`; // Redirect URL after successful login\n+      } catch (error) {\n+        console.error('Error signing in:', error);\n+        return false;\n+      }\n+    },\n+\n+    async redirect({ url, baseUrl }) {\n+      return `/`; // Redirect ke halaman utama setelah login\n+  }\n+  },\n+  secret: process.env.NEXTAUTH_SECRET,\n+});\n"
                },
                {
                    "date": 1722414782325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,54 @@\n+// pages/api/auth/[...nextauth].js\n+import NextAuth from 'next-auth';\n+import GoogleProvider from 'next-auth/providers/google';\n+import axios from 'axios';\n+\n+export default NextAuth({\n+  providers: [\n+    GoogleProvider({\n+      clientId: process.env.GOOGLE_CLIENT_ID,\n+      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n+    }),\n+  ],\n+  callbacks: {\n+    async jwt({ token, account,user}) {\n+      if (account) {\n+        // console.log('Account:', account); // Debugging\n+        //console.log('role:', user.role); // Debugging\n+        token.accessToken = user.jwtToken;\n+        token.user = user;\n+      }\n+      return token;\n+    },\n+    async session({session, token  }) {\n+      session.accessToken = token.accessToken;\n+      session.user = token.user;\n+      return session;\n+    },\n+    async signIn({ user, account, profile }) {\n+      const { email } = user;\n+      const { id_token } = account;\n+\n+      try {\n+        const response = await axios.post(`${process.env.API_URL}/auth/google`, {\n+          token: id_token,\n+        });\n+\n+        const { token } = response.data.jwtToken;\n+        user.jwtToken = response.data.jwtToken;\n+        user.role=response.data.user.role;\n+        //console.log(response.data.user.role)\n+        return true;\n+        //return `/home`; // Redirect URL after successful login\n+      } catch (error) {\n+        console.error('Error signing in:', error);\n+        return false;\n+      }\n+    },\n+\n+    async redirect({ url, baseUrl }) {\n+      return `/`; // Redirect ke halaman utama setelah login\n+  }\n+  },\n+  secret: process.env.NEXTAUTH_SECRET,\n+});\n"
                }
            ],
            "date": 1722413983193,
            "name": "Commit-0",
            "content": "// pages/api/auth/[...nextauth].js\nimport NextAuth from 'next-auth';\nimport GoogleProvider from 'next-auth/providers/google';\nimport axios from 'axios';\n\nexport default NextAuth({\n  providers: [\n    GoogleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n    }),\n  ],\n  callbacks: {\n    async jwt({ token, account,user}) {\n      if (account) {\n        // console.log('Account:', account); // Debugging\n        //console.log('role:', user.role); // Debugging\n        token.accessToken = user.jwtToken;\n        token.user = user;\n      }\n      return token;\n    },\n    async session({session, token  }) {\n      session.accessToken = token.accessToken;\n      session.user = token.user;\n      return session;\n    },\n    async signIn({ user, account, profile }) {\n      const { email } = user;\n      const { id_token } = account;\n\n      try {\n        const response = await axios.post(`${process.env.API_URL}/auth/google`, {\n          token: id_token,\n        });\n\n        const { token } = response.data.jwtToken;\n        //user.jwtToken = response.data.jwtToken;\n        //user.role=response.data.user.role;\n        //console.log(response.data.user.role)\n        return true;\n        //return `/home`; // Redirect URL after successful login\n      } catch (error) {\n        console.error('Error signing in:', error);\n        return false;\n      }\n    },\n\n    async redirect({ url, baseUrl }) {\n      return `/`; // Redirect ke halaman utama setelah login\n  }\n  },\n  secret: process.env.NEXTAUTH_SECRET,\n});\n"
        }
    ]
}